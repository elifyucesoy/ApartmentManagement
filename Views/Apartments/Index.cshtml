@model IEnumerable<ApartmentManagement.Model.Apartment>
@{
    ViewData["Title"] = "Apartments";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold mb-1">Apartment Management</h2>
                    <p class="text-muted mb-0">Manage apartment units and their details</p>
                </div>
                <div>
                    <button class="btn btn-success" onclick="openCreateModal()">
                        <i class="bi bi-plus-circle me-2"></i>Add New Apartment
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text bg-white">
                    <i class="bi bi-search"></i>
                </span>
                <input type="text" class="form-control" id="searchInput" placeholder="Search apartments...">
            </div>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="blockFilter">
                <option value="">All Blocks</option>
                <option value="A">Block A</option>
                <option value="B">Block B</option>
                <option value="C">Block C</option>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="true">Occupied</option>
                <option value="false">Vacant</option>
            </select>
        </div>
    </div>

    <!-- Table Section -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0" id="apartmentsTable">
                            <thead class="bg-light">
                                <tr>
                                    <th class="ps-4 py-3 border-0">Apartment No</th>
                                    <th class="py-3 border-0">Block</th>
                                    <th class="py-3 border-0">Floor</th>
                                    <th class="py-3 border-0">Type</th>
                                    <th class="py-3 border-0">Status</th>
                                    <th class="py-3 border-0">Owner/Tenant</th>
                                    <th class="py-3 border-0">Monthly Dues</th>
                                    <th class="text-center py-3 pe-4 border-0">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="apartmentTableBody">
                                @foreach (var item in Model)
                                {
                                    <tr class="border-bottom" data-apartment-id="@item.Id">
                                        <td class="ps-4 py-3">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle bg-primary text-white me-3">
                                                    @item.Block@item.Number
                                                </div>
                                                <span class="fw-semibold">@item.Number</span>
                                            </div>
                                        </td>
                                        <td class="py-3"><span class="fw-semibold">Block @item.Block</span></td>
                                        <td class="py-3">@item.Floor</td>
                                        <td class="py-3">
                                            @if (item.IsOccupied)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-house-fill me-1"></i>Occupied
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="bi bi-house me-1"></i>Vacant
                                                </span>
                                            }
                                        </td>

                                        <td class="text-center py-3 pe-4">
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-sm btn-outline-info" onclick="viewApartment(@item.Id)" title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="editApartment(@item.Id)" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" onclick="deleteApartment(@item.Id)" title="Delete">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="apartmentModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add New Apartment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="apartmentForm">
                    <input type="hidden" id="apartmentId" name="Id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Block <span class="text-danger">*</span></label>
                            <select class="form-select" id="block" name="Block" required>
                                <option value="">Select Block</option>
                                <option value="A">Block A</option>
                                <option value="B">Block B</option>
                                <option value="C">Block C</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Apartment Number <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="number" name="Number" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Floor <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="floor" name="Floor" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Type <span class="text-danger">*</span></label>
                            <select class="form-select" id="type" name="Type" required>
                                <option value="">Select Type</option>
                                <option value="1+1">1+1</option>
                                <option value="2+1">2+1</option>
                                <option value="3+1">3+1</option>
                                <option value="4+1">4+1</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Owner/Tenant Name</label>
                            <input type="text" class="form-control" id="owner" name="Owner">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Monthly Dues <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="monthlyDues" name="MonthlyDues" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="isOccupied" name="IsOccupied">
                            <label class="form-check-label" for="isOccupied">Occupied</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveApartment()">Save Apartment</button>
            </div>
        </div>
    </div>
</div>

<!-- View Details Modal -->
<div class="modal fade" id="viewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Apartment Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="viewModalBody">
                <!-- Details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1rem;
    }

    .table > :not(caption) > * > * {
        padding: 1rem 0.75rem;
    }

    .card {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .btn-group .btn {
        padding: 0.375rem 0.75rem;
    }

    thead th {
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: #6c757d;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let apartmentModal;
    let viewModal;
    let isEditMode = false;

    document.addEventListener('DOMContentLoaded', function() {
        apartmentModal = new bootstrap.Modal(document.getElementById('apartmentModal'));
        viewModal = new bootstrap.Modal(document.getElementById('viewModal'));

        // Search and filter functionality
        const searchInput = document.getElementById('searchInput');
        const blockFilter = document.getElementById('blockFilter');
        const statusFilter = document.getElementById('statusFilter');

        searchInput.addEventListener('keyup', filterTable);
        blockFilter.addEventListener('change', filterTable);
        statusFilter.addEventListener('change', filterTable);
    });

    function filterTable() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const selectedBlock = document.getElementById('blockFilter').value;
        const selectedStatus = document.getElementById('statusFilter').value;
        const rows = document.querySelectorAll('#apartmentTableBody tr');

        rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            const matchesSearch = text.includes(searchTerm);
            const matchesBlock = !selectedBlock || text.includes(`Block ${selectedBlock}`);
            const matchesStatus = !selectedStatus || 
                (selectedStatus === 'true' && text.includes('occupied')) ||
                (selectedStatus === 'false' && text.includes('vacant'));

            row.style.display = matchesSearch && matchesBlock && matchesStatus ? '' : 'none';
        });
    }

    function openCreateModal() {
        isEditMode = false;
        document.getElementById('modalTitle').textContent = 'Add New Apartment';
        document.getElementById('apartmentForm').reset();
        document.getElementById('apartmentId').value = '';
        apartmentModal.show();
    }

    async function editApartment(id) {
        isEditMode = true;
        document.getElementById('modalTitle').textContent = 'Edit Apartment';

        try {
           const response = await fetch(`/Apartments/GetApartment?id=${id}`);
            const result = await response.json();

            if (result.success) {
                const apartment = result.data;
                document.getElementById('apartmentId').value = apartment.id;
                document.getElementById('block').value = apartment.block;
                document.getElementById('number').value = apartment.number;
                document.getElementById('floor').value = apartment.floor;
                document.getElementById('type').value = apartment.type;
                document.getElementById('owner').value = apartment.owner || '';
                document.getElementById('monthlyDues').value = apartment.monthlyDues;
                document.getElementById('isOccupied').checked = apartment.isOccupied;

                apartmentModal.show();
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            debugger
            showAlert('error', 'An error occurred while loading apartment data');
        }
    }

    async function saveApartment() {
        debugger;
        const form = document.getElementById('apartmentForm');


        const formData = {
            Id: parseInt(document.getElementById('apartmentId').value) || 0,
            Block: document.getElementById('block').value,
            Number: parseInt(document.getElementById('number').value),
            Floor: parseInt(document.getElementById('floor').value),
            Type: document.getElementById('type').value,
            Owner: document.getElementById('owner').value,
            MonthlyDues: parseFloat(document.getElementById('monthlyDues').value),
            IsOccupied: document.getElementById('isOccupied').checked
        };

        const url = isEditMode ? '/Apartments/Update' : '/Apartments/Create';

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                apartmentModal.hide();
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            debugger
            showAlert('error', 'An error occurred while saving the apartment');
        }
    }

    async function deleteApartment(id) {
        if (!confirm('Are you sure you want to delete this apartment?')) {
            return;
        }

        try {
            const response = await fetch(`/Apartments/Delete?id=${id}`, {
                method: 'POST'
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'An error occurred while deleting the apartment');
        }
    }

    async function viewApartment(id) {
        try {
            const response = await fetch(`/Apartments/GetApartment?id=${id}`);
            const result = await response.json();

            if (result.success) {
                const apartment = result.data;
                const statusBadge = apartment.isOccupied
                    ? '<span class="badge bg-success"><i class="bi bi-house-fill me-1"></i>Occupied</span>'
                    : '<span class="badge bg-secondary"><i class="bi bi-house me-1"></i>Vacant</span>';

                document.getElementById('viewModalBody').innerHTML = `
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Block</label>
                            <p class="fw-semibold">Block ${apartment.block}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Apartment Number</label>
                            <p class="fw-semibold">${apartment.number}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Floor</label>
                            <p class="fw-semibold">${apartment.floor}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Type</label>
                            <p class="fw-semibold">${apartment.type}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Status</label>
                            <p>${statusBadge}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Owner/Tenant</label>
                            <p class="fw-semibold">${apartment.owner || 'Not Assigned'}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Monthly Dues</label>
                            <p class="fw-semibold">$${apartment.monthlyDues}</p>
                        </div>
                    </div>
                `;

                viewModal.show();
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            debugger;
            showAlert('error', 'An error occurred while loading apartment details');
        }
    }

    function showAlert(type, message) {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`;
        alertDiv.style.zIndex = '9999';
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.body.appendChild(alertDiv);

        setTimeout(() => {
            alertDiv.remove();
        }, 3000);
    }
</script>