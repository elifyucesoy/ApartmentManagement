@model IEnumerable<ApartmentManagement.Model.User>
@{
    ViewData["Title"] = "Users";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold mb-1">User Management</h2>
                    <p class="text-muted mb-0">Manage system users and their permissions</p>
                </div>
                <div>
                    <button class="btn btn-success" onclick="openCreateModal()">
                        <i class="bi bi-plus-circle me-2"></i>Add New User
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text bg-white">
                    <i class="bi bi-search"></i>
                </span>
                <input type="text" class="form-control" id="searchInput" placeholder="Search users...">
            </div>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="roleFilter">
                <option value="">All Roles</option>
                <option value="Admin">Admin</option>
                <option value="Manager">Manager</option>
                <option value="User">User</option>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="true">Active</option>
                <option value="false">Inactive</option>
            </select>
        </div>
    </div>

    <!-- Table Section -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0" id="usersTable">
                            <thead class="bg-light">
                                <tr>
                                    <th class="ps-4 py-3 border-0">First Name</th>
                                    <th class="py-3 border-0">Last Name</th>
                                    <th class="py-3 border-0">Email</th>
                                    <th class="py-3 border-0">Phone</th>
                                    <th class="py-3 border-0">Role</th>
                                    <th class="py-3 border-0">Status</th>
                                    <th class="py-3 border-0">Created At</th>
                                    <th class="text-center py-3 pe-4 border-0">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="userTableBody">
                                @foreach (var item in Model)
                                {
                                    <tr class="border-bottom" data-user-id="@item.Id">
                                        <td class="ps-4 py-3">
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle bg-primary text-white me-3">
                                                    @item.FirstName?.Substring(0, 1).ToUpper()
                                                </div>
                                                <span class="fw-semibold">@item.FirstName</span>
                                            </div>
                                        </td>
                                        <td class="py-3"><span class="fw-semibold">@item.LastName</span></td>
                                        <td class="py-3">
                                            <i class="bi bi-envelope me-2 text-muted"></i>@item.Email
                                        </td>
                                        <td class="py-3">
                                            <i class="bi bi-telephone me-2 text-muted"></i>@item.Phone
                                        </td>
                                        <td class="py-3">
                                            @if (item.Role == "Admin")
                                            {
                                                <span class="badge bg-danger">@item.Role</span>
                                            }
                                            else if (item.Role == "Manager")
                                            {
                                                <span class="badge bg-warning text-dark">@item.Role</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-info">@item.Role</span>
                                            }
                                        </td>
                                        <td class="py-3">
                                            @if (item.IsActive)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-check-circle me-1"></i>Active
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="bi bi-x-circle me-1"></i>Inactive
                                                </span>
                                            }
                                        </td>
                                        <td class="py-3">
                                            <small class="text-muted">@item.CreatedAt.ToString("dd MMM yyyy")</small>
                                        </td>
                                        <td class="text-center py-3 pe-4">
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-sm btn-outline-info" onclick="viewUser(@item.Id)" title="View Details">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="editUser(@item.Id)" title="Edit">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@item.Id)" title="Delete">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="userModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="userForm">
                    <input type="hidden" id="userId" name="Id">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">First Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="firstName" name="FirstName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Last Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="lastName" name="LastName" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Email <span class="text-danger">*</span></label>
                            <input type="email" class="form-control" id="email" name="Email" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="phone" name="Phone">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control" id="password" name="Password">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Role <span class="text-danger">*</span></label>
                            <select class="form-select" id="role" name="Role" required>
                                <option value="">Select Role</option>
                                <option value="Admin">Admin</option>
                                <option value="Manager">Manager</option>
                                <option value="User">User</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                            <label class="form-check-label" for="isActive">Active</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- View Details Modal -->
<div class="modal fade" id="viewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="viewModalBody">
                <!-- Details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1rem;
    }

    .table > :not(caption) > * > * {
        padding: 1rem 0.75rem;
    }

    .card {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .btn-group .btn {
        padding: 0.375rem 0.75rem;
    }

    thead th {
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: #6c757d;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let userModal;
    let viewModal;
    let isEditMode = false;

    document.addEventListener('DOMContentLoaded', function() {
        userModal = new bootstrap.Modal(document.getElementById('userModal'));
        viewModal = new bootstrap.Modal(document.getElementById('viewModal'));

        // Search and filter functionality
        const searchInput = document.getElementById('searchInput');
        const roleFilter = document.getElementById('roleFilter');
        const statusFilter = document.getElementById('statusFilter');

        searchInput.addEventListener('keyup', filterTable);
        roleFilter.addEventListener('change', filterTable);
        statusFilter.addEventListener('change', filterTable);
    });

    function filterTable() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase();
        const selectedRole = document.getElementById('roleFilter').value.toLowerCase();
        const selectedStatus = document.getElementById('statusFilter').value;
        const rows = document.querySelectorAll('#userTableBody tr');

        rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            const matchesSearch = text.includes(searchTerm);
            const matchesRole = !selectedRole || text.includes(selectedRole);
            const matchesStatus = !selectedStatus || text.includes(selectedStatus === 'true' ? 'active' : 'inactive');

            row.style.display = matchesSearch && matchesRole && matchesStatus ? '' : 'none';
        });
    }

    function openCreateModal() {
        isEditMode = false;
        document.getElementById('modalTitle').textContent = 'Add New User';
        document.getElementById('userForm').reset();
        document.getElementById('userId').value = '';
        document.getElementById('password').required = true;
        userModal.show();
    }

    async function editUser(id) {
        isEditMode = true;
        document.getElementById('modalTitle').textContent = 'Edit User';
        document.getElementById('password').required = false;

        try {
            const response = await fetch(`/User/GetUser?id=${id}`);
            const result = await response.json();

            if (result.success) {
                const user = result.data;
                document.getElementById('userId').value = user.id;
                document.getElementById('firstName').value = user.firstName;
                document.getElementById('lastName').value = user.lastName;
                document.getElementById('email').value = user.email;
                document.getElementById('phone').value = user.phone || '';
                document.getElementById('role').value = user.role;
                document.getElementById('isActive').checked = user.isActive;
                document.getElementById('password').value = '';

                userModal.show();
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'An error occurred while loading user data');
        }
    }

    async function saveUser() {
        const form = document.getElementById('userForm');
        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }

        const formData = {
            Id: parseInt(document.getElementById('userId').value) || 0,
            FirstName: document.getElementById('firstName').value,
            LastName: document.getElementById('lastName').value,
            Email: document.getElementById('email').value,
            Phone: document.getElementById('phone').value,
            Password: document.getElementById('password').value,
            Role: document.getElementById('role').value,
            IsActive: document.getElementById('isActive').checked,
            CreatedAt: new Date().toISOString()
        };

        const url = isEditMode ? '/User/Update' : '/User/Create';

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                userModal.hide();
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'An error occurred while saving the user');
        }
    }

    async function deleteUser(id) {
        if (!confirm('Are you sure you want to delete this user?')) {
            return;
        }

        try {
            const response = await fetch(`/User/Delete?id=${id}`, {
                method: 'POST'
            });

            const result = await response.json();

            if (result.success) {
                showAlert('success', result.message);
                setTimeout(() => location.reload(), 1000);
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'An error occurred while deleting the user');
        }
    }

    async function viewUser(id) {
        try {
            const response = await fetch(`/User/GetUser?id=${id}`);
            const result = await response.json();

            if (result.success) {
                const user = result.data;
                const statusBadge = user.isActive
                    ? '<span class="badge bg-success"><i class="bi bi-check-circle me-1"></i>Active</span>'
                    : '<span class="badge bg-secondary"><i class="bi bi-x-circle me-1"></i>Inactive</span>';

                let roleBadge = '<span class="badge bg-info">' + user.role + '</span>';
                if (user.role === 'Admin') {
                    roleBadge = '<span class="badge bg-danger">' + user.role + '</span>';
                } else if (user.role === 'Manager') {
                    roleBadge = '<span class="badge bg-warning text-dark">' + user.role + '</span>';
                }

                document.getElementById('viewModalBody').innerHTML = `
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">First Name</label>
                            <p class="fw-semibold">${user.firstName}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Last Name</label>
                            <p class="fw-semibold">${user.lastName}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Email</label>
                            <p class="fw-semibold"><i class="bi bi-envelope me-2"></i>${user.email}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Phone</label>
                            <p class="fw-semibold"><i class="bi bi-telephone me-2"></i>${user.phone || 'N/A'}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Role</label>
                            <p>${roleBadge}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Status</label>
                            <p>${statusBadge}</p>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Created At</label>
                            <p class="fw-semibold">${new Date(user.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</p>
                        </div>
                    </div>
                `;

                viewModal.show();
            } else {
                showAlert('error', result.message);
            }
        } catch (error) {
            showAlert('error', 'An error occurred while loading user details');
        }
    }

    function showAlert(type, message) {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`;
        alertDiv.style.zIndex = '9999';
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.body.appendChild(alertDiv);

        setTimeout(() => {
            alertDiv.remove();
        }, 3000);
    }
</script>